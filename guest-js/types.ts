import * as v from "valibot";

export enum EventTypeEnum {
  KeyPress = "KeyPress",
  KeyRelease = "KeyRelease",
  ButtonPress = "ButtonPress",
  ButtonRelease = "ButtonRelease",
  MouseMove = "MouseMove",
  Wheel = "Wheel",
}

export enum Button {
  Left = "Left",
  Right = "Right",
  Middle = "Middle",
}

export const EventType = v.enum(EventTypeEnum);
export type EventType = v.InferOutput<typeof EventType>;

export const InputEvent = v.object({
  eventType: EventType,
  time: v.pipe(
    v.number(),
    v.transform((n) => new Date(n))
  ),
  button: v.optional(v.enum(Button)),
  position: v.optional(
    v.object({
      x: v.number(),
      y: v.number(),
    })
  ),
  deltaPosition: v.optional(
    v.object({
      deltaX: v.number(),
      deltaY: v.number(),
    })
  ),
  key: v.optional(v.string()),
});
export type InputEvent = v.InferOutput<typeof InputEvent>;

export type Key =
  | { Unknown: number }
  | { RawKey: string }
  | "Alt"
  | "AltGr"
  | "Backspace"
  | "CapsLock"
  | "ControlLeft"
  | "ControlRight"
  | "Delete"
  | "DownArrow"
  | "End"
  | "Escape"
  | "F1"
  | "F10"
  | "F11"
  | "F12"
  | "F13"
  | "F14"
  | "F15"
  | "F16"
  | "F17"
  | "F18"
  | "F19"
  | "F20"
  | "F21"
  | "F22"
  | "F23"
  | "F24"
  | "F2"
  | "F3"
  | "F4"
  | "F5"
  | "F6"
  | "F7"
  | "F8"
  | "F9"
  | "Home"
  | "LeftArrow"
  | "MetaLeft"
  | "MetaRight"
  | "PageDown"
  | "PageUp"
  | "Return"
  | "RightArrow"
  | "ShiftLeft"
  | "ShiftRight"
  | "Space"
  | "Tab"
  | "UpArrow"
  | "PrintScreen"
  | "ScrollLock"
  | "Pause"
  | "NumLock"
  | "BackQuote"
  | "Num1"
  | "Num2"
  | "Num3"
  | "Num4"
  | "Num5"
  | "Num6"
  | "Num7"
  | "Num8"
  | "Num9"
  | "Num0"
  | "Minus"
  | "Equal"
  | "KeyQ"
  | "KeyW"
  | "KeyE"
  | "KeyR"
  | "KeyT"
  | "KeyY"
  | "KeyU"
  | "KeyI"
  | "KeyO"
  | "KeyP"
  | "LeftBracket"
  | "RightBracket"
  | "KeyA"
  | "KeyS"
  | "KeyD"
  | "KeyF"
  | "KeyG"
  | "KeyH"
  | "KeyJ"
  | "KeyK"
  | "KeyL"
  | "SemiColon"
  | "Quote"
  | "BackSlash"
  | "IntlBackslash"
  | "IntlRo"
  | "IntlYen"
  | "KanaMode"
  | "KeyZ"
  | "KeyX"
  | "KeyC"
  | "KeyV"
  | "KeyB"
  | "KeyN"
  | "KeyM"
  | "Comma"
  | "Dot"
  | "Slash"
  | "Insert"
  | "KpReturn"
  | "KpMinus"
  | "KpPlus"
  | "KpMultiply"
  | "KpDivide"
  | "KpDecimal"
  | "KpEqual"
  | "KpComma"
  | "Kp0"
  | "Kp1"
  | "Kp2"
  | "Kp3"
  | "Kp4"
  | "Kp5"
  | "Kp6"
  | "Kp7"
  | "Kp8"
  | "Kp9"
  | "VolumeUp"
  | "VolumeDown"
  | "VolumeMute"
  | "Lang1"
  | "Lang2"
  | "Lang3"
  | "Lang4"
  | "Lang5"
  | "Function"
  | "Apps"
  | "Cancel"
  | "Clear"
  | "Kana"
  | "Hangul"
  | "Junja"
  | "Final"
  | "Hanja"
  | "Hanji"
  | "Print"
  | "Select"
  | "Execute"
  | "Help"
  | "Sleep"
  | "Separator";

// export type Key =
//   | string
//   | { Unicode: string }
//   | "Alt"
//   | "Backspace"
//   | "Begin"
//   | "Break"
//   | "Cancel"
//   | "CapsLock"
//   | "Clear"
//   | "Control"
//   | "Delete"
//   | "DownArrow"
//   | "End"
//   | "Escape"
//   | "Execute"
//   | "F1"
//   | "F2"
//   | "F3"
//   | "F4"
//   | "F5"
//   | "F6"
//   | "F7"
//   | "F8"
//   | "F9"
//   | "F10"
//   | "F11"
//   | "F12"
//   | "F13"
//   | "F14"
//   | "F15"
//   | "F16"
//   | "F17"
//   | "F18"
//   | "F19"
//   | "F20"
//   | "F21"
//   | "F22"
//   | "F23"
//   | "F24"
//   | "F25"
//   | "F26"
//   | "F27"
//   | "F28"
//   | "F29"
//   | "F30"
//   | "F31"
//   | "F32"
//   | "F33"
//   | "F34"
//   | "F35"
//   | "Find"
//   | "Hangul"
//   | "Hanja"
//   | "Help"
//   | "Home"
//   | "Insert"
//   | "Kanji"
//   | "LeftArrow"
//   | "Linefeed"
//   | "LMenu"
//   | "ModeChange"
//   | "MediaNextTrack"
//   | "MediaPlayPause"
//   | "MediaPrevTrack"
//   | "MediaStop"
//   | "Numlock"
//   | "PageDown"
//   | "PageUp"
//   | "Pause"
//   | "Print"
//   | "PrintScr"
//   | "RControl"
//   | "Redo"
//   | "Return"
//   | "RightArrow"
//   | "RShift"
//   | "ScrollLock"
//   | "Select"
//   | "ScriptSwitch"
//   | "Shift"
//   | "ShiftLock"
//   | "Space"
//   | "SysReq"
//   | "Tab"
//   | "Undo"
//   | "UpArrow"
//   | "VolumeDown"
//   | "VolumeUp"
//   | "VolumeMute"
//   | "MicMute"
//   | "Meta";
